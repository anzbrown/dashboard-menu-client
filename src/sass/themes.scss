$themes: (
        dark: (
                bgPrimary: #23232e,
                bgSecondary: #141418,
                textPrimary: #b6b6b6,
                textSecondary: #5b4a92,
                textTertiary: #9478f3,
                scrollBarTrack: #1e1e24
        ),
        light: (
                bgPrimary: lightgrey,
                bgSecondary: #141418,
                textPrimary: black,
                textSecondary: #ef6c23,
                textTertiary: #ef9463,
                scrollBarTrack: #1e1e24
        )
);

/**
* Mixin to use to generate blocks for each theme
* Automatically takes @content
*/
$scopedTheme: null;
@mixin themify($allThemesMap: $themes) {
  @each $themeName, $themeMap in $allThemesMap {
    .theme-#{$themeName} & {
      // Creating a map that contains values specific to theme.
      // Global is necessary since in mixin
      $scopedTheme: () !global;
      @each $variableName, $variableValue in $themeMap {
        // Merge each key-value pair into the theme specific map
        $scopedTheme: map-merge($scopedTheme, ($variableName: $variableValue)) !global;
      }
      // The original content passed
      @content;
      // Unset
      $scopedTheme: null !global;
    }
  }
}

/**
* Function to call within themify mixin, to get value from the current theme in the iterator
*/
@function themed($key) {
  @return map-get($scopedTheme, $key);
}